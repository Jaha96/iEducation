$(function(){
	'use strict';
	$.fn.hasAttr = function(attribute){
		var attr = this.attr(attribute);
		if (typeof attr !== typeof undefined && attr !== false) 
		   return true;
		return false;
	}

	$.fn.materialForm = function() {
		// Inputs
	    this.find('input, textarea').each(function(i){
	    	if(isValidType($(this))){
	    		var name = $(this).attr('name');
	    		$(this).attr('id', name);
		    	var $wrap = $(this).wrap("<div class='material-input'></div>").parent();
		    	$wrap.append("<span class='material-bar'></span>");

		    	var tagName = $(this).prop("tagName").toLowerCase();
		    	$wrap.addClass(tagName);
		    	
		    	//var placeholder = $(this).attr('placeholder');
		    	//if(placeholder){
		    		//$wrap.append("<label for='"+name+"'>"+placeholder+"</label>");
		    		//$(this).removeAttr('placeholder');
		    	//}

		    	addFilled($(this));
	    	}

	    	if(isType($(this), 'radio') || isType($(this), 'checkbox')){
	    		
	    		var name = $(this).attr('name').replace('[]','');
	    		var group_id = 'material-group-' + name;
	    		var placeholder = $(this).attr('placeholder');
	    		var item_id = name+ '-' + i;
	    		var $label = $('<label for="'+item_id+'">'+placeholder+'</label>');
	    		var $group_item = $('<div class="material-group-item"></div>');
	    		$(this).attr('id', item_id);

	    		if($("#"+group_id).length){
	    			var $group = $('#'+group_id);
	    			$group.append($(this));
	    		}
	    		else{
	    			var $group = $(this).wrap("<div class='material-group' id='"+group_id+"'></div>").parent();
	    		}

	    		if(isType($(this), 'radio'))
	    			var $radio = $('<div class="material-radio"></div>');
	    		else
	    			var $radio = $('<div class="material-checkbox"></div>');

	    		$group_item.append($(this));
	    		$group_item.append($label);
	    		$group_item.append($radio);

	    		$group.append($group_item);
	    	}
	    });

	    this.find('input, textarea').on('blur', function(){
		    if(isValidType($(this)))
		    	addFilled($(this))
	    });

	    // Radio

	    function isValidType($el){
	    	var type = $el.attr('type');
	    	return (type != 'hidden' && type != 'submit' && type != 'checkbox' && type != 'radio' && type != 'file' ? 1 : 0);
	    }

	    function isType($el, type){
	    	var el_type = $el.attr('type');
	    	return (el_type == type);
	    }

	    function addFilled($el){
	    	if($el.val())
	    		$el.addClass('filled');
	    	else
	    		$el.removeClass('filled');
	    }

	    // Selects
	    this.find('select').each(function(i){
	    	var placeholder = $(this).attr('placeholder');
	    	var type = ($(this).attr('multiple') ? 'checkbox' : 'radio');
	    	var name = id = $(this).attr('name');
	    	var $wrap = $(this).wrap("<div class='material-select'></div>").parent();
	    	if(type == 'checkbox'){
	    		name += '[]';
	    		var $bar = $('<span class="material-bar"></span>');
	    		$wrap.append($bar).addClass('checkbox');
	    	}
	    	else{
	    		var $title = $('<span class="material-title">'+placeholder+'</span>');
	    		$wrap.prepend($title);
	    	}

	    	var $label = $('<label for="select-'+i+'"><span>'+placeholder+'</span><strong></strong></label>');
	    	var $checkbox = $('<input type="checkbox" id="select-'+i+'">');

	    	$wrap.prepend($checkbox);
	    	$wrap.prepend($label);
	    	
	    	var $list = $('<ul class="'+type+'"></ul>');
	    	$wrap.append($list);

	    	var selected_length = 0;
	    	var length = $(this).children('option').length;
	    	var $selected;
	    	$(this).children('option').each(function(j){
	    		var title = $(this).text();
	    		var value = $(this).val();
	    		
	    		var selected = $(this).hasAttr('selected');

	    		var $list_item = $('<li></li>');
	    		$list.append($list_item);

	    		var $label = $('<label for="'+id+'-'+j+'">'+title+'</label>');
	    		var $input = $('<input type="'+type+'" value="'+value+'" name="'+name+'" id="'+id+'-'+j+'">');
	    		if(selected){
	    			$selected = $input.prop('checked', true);
	    			selected_length++;
	    		}
	    		
	    		$list_item.append($input);
	    		$list_item.append($label);
	    	});
	    	if($bar){
	    		var percentage = selected_length / length * 100;
	    		$bar.width(percentage + '%');
	    	}
	    	else{
	    		if(selected_length){
	    			$label.children('span').text($selected.next('label').text())
	    			$wrap.addClass('filled');
	    		}
	    	}
	    	$(this).remove();
	    });

		$(document).on('click', function(e) {
		    if ( $(e.target).closest('.material-select').length === 0 ) {
		        // cancel highlighting 
		        $('.material-select > input').prop('checked', false);
		    }
		});

		$('.material-select > input').on('change', function(){
			var changed_id = $(this).attr('id');
			$('.material-select > input').each(function(){
				var this_id = $(this).attr('id');
				if(changed_id != this_id)
					$(this).prop('checked', false);
			});
		});

		$('.material-select ul input').on('change', function(){
			if($(this).closest('.material-select.checkbox').length){
				var $ul = $(this).closest('ul')
				var length = $ul.find('input').length;
				var checked_length = $ul.find('input:checked').length;
				var percentage = checked_length / length * 100;
				$(this).closest('.material-select').find('.material-bar').width(percentage + '%');
			}
			else{
				var $material_select = $(this).closest('.material-select')
				var $label = $material_select.children('label').children('span');
				var $next = $(this).next('label');
				$label.text($next.text());
				$material_select.children('input').prop('checked', false);
				$material_select.addClass('filled');
			}
		});

	};
});




//jQuery time
var parent, ink, d, x, y;
$(".manimate").click(function(e){
	parent = $(this).parent();
	//create .ink element if it doesn't exist
	if(parent.find(".ink").length == 0)
		parent.prepend("<span class='ink'></span>");
		
	ink = parent.find(".ink");
	//incase of quick double clicks stop the previous animation
	ink.removeClass("animate");
	
	//set size of .ink
	if(!ink.height() && !ink.width())
	{
		//use parent's width or height whichever is larger for the diameter to make a circle which can cover the entire element.
		d = Math.max(parent.outerWidth(), parent.outerHeight());
		ink.css({height: d, width: d});
	}
	
	//get click coordinates
	//logic = click coordinates relative to page - parent's position relative to page - half of self height/width to make it controllable from the center;
	x = e.pageX - parent.offset().left - ink.width()/2;
	y = e.pageY - parent.offset().top - ink.height()/2;
	
	//set the position and add class .animate
	ink.css({top: y+'px', left: x+'px'}).addClass("animate");
})



/*!
 * Waves v0.2.1
 * https://publicis-indonesia.github.io/Waves
 *
 * Copyright 2014 Publicis Metro Indonesia, PT. and other contributors
 * Released under the BSD license
 * https://github.com/publicis-indonesia/Waves/blob/master/LICENSE
 */

;(function(window) {
    'use strict';

    function Waves() {

        var $$ = document.querySelectorAll.bind(document);

        // Find exact position of element
        function position(obj) {

            var left = 0;
            var top = 0;
            
            if (obj.offsetParent) {
                do {
                    left += obj.offsetLeft;
                    top += obj.offsetTop;
                } while (obj = obj.offsetParent);
            }

            return {
                top: top, 
                left: left
            };
        }

        var Effect = {

            // Trigger element action if they are waves-button
            action: function(e) {

                // catch window.event
                e = e || window.event; 

                var el = this;

                // Disable action if right click triggered this event
                if (e.which !== 1) {
                    return false;
                }

                if (el.className.indexOf('waves-button') !== -1) {

                    // Get the child
                    var child = el.childNodes[1];
                    var tag = child.tagName.toLowerCase();

                    // Redirect page based on href attribute
                    if (tag === 'a') {

                        if (!child.href.length) {
                            return false;
                        }

                        if (child.target === '_blank') {
                            var win = window.open(child.href, '_blank');
                            return win.focus();
                        }

                        return window.location.href = child.href;
                    }

                    // Click the element or submit the form if exist
                    if (tag === 'button' || tag === 'input') {
                        
                        if (child.submit) {
                            return child.submit();
                        }

                        return child.click();
                    }
                }

            },

            show: function(e) {

                var el = this;

                // Create ripple
                var ripple = document.createElement('div');
                ripple.className = ripple.className + 'waves-ripple';
                el.appendChild(ripple);

                // Get click coordinate and element witdh
                var pos         = position(el);
                var relativeY   = (e.pageY - pos.top);
                var relativeX   = (e.pageX - pos.left);
                var width       = el.clientWidth;

                // Attach data to element
                ripple.setAttribute('data-hold', Date.now());
                ripple.setAttribute('data-x', relativeX);
                ripple.setAttribute('data-y', relativeY);

                // Start ripple
                var positionStyle = 'top:'+relativeY+'px;left:'+relativeX+'px;';
                var flowStyle = 'border-width:'+width+'px;margin-top:-'+width+'px;margin-left:-'+width+'px;opacity:1;';

                ripple.className = ripple.className + ' waves-notransition';
                ripple.setAttribute('style', positionStyle);
                ripple.offsetHeight;
                ripple.className = ripple.className.replace('waves-notransition', '');
                ripple.setAttribute('style', positionStyle+flowStyle);

            },

            hide: function(e) {
                
                var el = this;
                var width = el.clientWidth;
                
                // Get first ripple
                var ripple = null;

                for (var a = 0; a < el.children.length; a++) {
                    if (el.children[a].className.indexOf('waves-ripple') !== -1) {
                        ripple = el.children[a];
                        continue;
                    }
                }

                if (!ripple) {
                    return false;
                }

                var relativeX   = ripple.getAttribute('data-x');
                var relativeY   = ripple.getAttribute('data-y');

                // Get delay beetween mousedown and mouse leave
                var diff = Date.now() - Number(ripple.getAttribute('data-hold'));
                var delay = 500 - diff;

                if (delay < 0) {
                    delay = 0;
                }

                // Fade out ripple after delay
                setTimeout(function() {

                    var style = 'top:'+relativeY+'px;left:'+relativeX+'px;border-width:'+width+'px;margin-top:-'+width+'px;margin-left:-'+width+'px;opacity:0;';

                    ripple.setAttribute('style', style);

                    setTimeout(function() {

                        try {
                            el.removeChild(ripple);
                        } catch(e) {
                            return false;
                        }

                        
                    }, 300);

                }, delay);

            },
        };

        return {
            displayEffect: function() {

                Array.prototype.forEach.call($$('.waves-effect'), function(i) {

                    if (window.Touch) {
                        i.addEventListener('touchstart', Effect.show, false);
                        i.addEventListener('touchend', Effect.hide, false);
                        i.addEventListener('touchend', Effect.action, false);
                    }

                    i.addEventListener('mousedown', Effect.show, false);
                    i.addEventListener('mouseup', Effect.hide, false);
                    i.addEventListener('mouseleave', Effect.hide, false);
                    i.addEventListener('mouseup', Effect.action, false);

                });

            }
        }
    }

    window.Waves = Waves;

})(window);